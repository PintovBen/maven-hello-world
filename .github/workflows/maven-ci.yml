name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
  
jobs:
  
  maven-release:

    runs-on: ubuntu-latest
    defaults:
      run:
       working-directory: ./my-app
   
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8.0.302+8'
        distribution: 'adopt'

    - name: Compile with Maven
      run: mvn clean compile
        
    - name: Create new release for Maven project & patch the project version
      uses: qcastel/github-actions-maven-release@v1.12.12
      env:
       JAVA_HOME: /usr/lib/jvm/java-8-openjdk/
      with:
       access-token: ${{ secrets.GH_ACCESS_TOKEN }}
       maven-project-folder: ./my-app
       release-branch-name: master
       maven-args: "-Dmaven.javadoc.skip=true -DskipTests -DskipITs -Dmaven.deploy.skip=true"
       
    - name: Create artifact for the release
      uses: actions/upload-artifact@v2
      with:
        name: maven-build
        path: ./my-app/target/checkout/my-app
       
        
  build-image-and-push:
  

      needs: maven-release
      runs-on: ubuntu-latest
      defaults:
       run:
        working-directory: ./build
      steps:
      
        - name: Download build artifact
          uses: actions/download-artifact@v2
          with: 
            name: maven-build
            path: build/
      
        - name: Set up JDK 8
          uses: actions/setup-java@v2
          with:
            java-version: '8.0.302+8'
            distribution: 'adopt'
            
        - name: Extract version from POM
          run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          id: project
      
 
        - name: Login to DockerHub
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
            
        - name: Set up Docker Buildx
          id: buildx
          uses: docker/setup-buildx-action@v1
            
            
        - name: Build and push
          id: docker_build
          uses: docker/build-push-action@v2
          with:
           context: ./build
           file: ./build/Dockerfile
           push: true
           tags: ${{ secrets.DOCKERHUB_USERNAME }}/mavenhelloworld:${{ steps.project.outputs.version }}
     
  run-image:
       
 
       needs: build-image-and-push
       runs-on: ubuntu-latest
       container:
         image: benpintov/mavenhelloworld:1.0.1
         
       steps:
        - name: Run image and the Java application inside it
          run: |
            java -jar /usr/app/my-app-1.0.1.jar